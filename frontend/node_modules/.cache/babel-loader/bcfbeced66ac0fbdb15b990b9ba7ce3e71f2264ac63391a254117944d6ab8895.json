{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      blog: {\n        title: '',\n        content: '',\n        slug: '',\n        short_description: '',\n        image: null // Add image field to the blog object\n      }\n    };\n  },\n  methods: {\n    async submitBlog() {\n      const token = localStorage.getItem('token');\n      const formData = new FormData(); // Create a FormData object\n\n      // Append all form data, including the image, to the FormData object\n      formData.append('title', this.blog.title);\n      formData.append('content', this.blog.content);\n      formData.append('slug', this.blog.slug);\n      formData.append('short_description', this.blog.short_description);\n      formData.append('image', this.blog.image);\n      await axios.post('blogs/addblog/', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          // Set the content type to multipart/form-data\n          Authorization: `Token ${token}`\n        }\n      }).then(response => {\n        this.blog.title = '';\n        this.blog.content = '';\n        this.blog.slug = '';\n        this.blog.short_description = '';\n        this.blog.image = null; // Reset the image field\n        alert('Blog was added');\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    handleImageUpload(event) {\n      const file = event.target.files[0];\n      this.blog.image = file;\n    }\n  }\n};","map":{"version":3,"names":["axios","data","blog","title","content","slug","short_description","image","methods","submitBlog","token","localStorage","getItem","formData","FormData","append","post","headers","Authorization","then","response","alert","catch","error","console","log","handleImageUpload","event","file","target","files"],"sources":["/home/toree/Desktop/vue-drf-blog-dj/frontend/src/views/NewBlog.vue"],"sourcesContent":["<template>\n  <form v-on:submit.prevent=\"submitBlog()\">\n    <!-- Title and other fields -->\n\n    <!-- Add a new input field for image upload -->\n    <div class=\"w-50 mx-auto pt-5\">\n      <div>\n        <label for=\"exampleFormControlInput1\" class=\"form-label mx-1\"><strong>Image</strong></label>\n        <input type=\"file\" class=\"form-control\" id=\"\" v-on:change=\"handleImageUpload\">\n      </div>\n    </div>\n\n    <!-- Submit button -->\n    <button type=\"submit\" class=\"btn btn-primary\">Submit!</button>\n  </form>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      blog: {\n        title: '',\n        content: '',\n        slug: '',\n        short_description: '',\n        image: null, // Add image field to the blog object\n      },\n    }   \n  },\n\n  methods: {\n    async submitBlog() {\n      const token = localStorage.getItem('token');\n      const formData = new FormData(); // Create a FormData object\n\n      // Append all form data, including the image, to the FormData object\n      formData.append('title', this.blog.title);\n      formData.append('content', this.blog.content);\n      formData.append('slug', this.blog.slug);\n      formData.append('short_description', this.blog.short_description);\n      formData.append('image', this.blog.image);\n\n      await axios\n        .post('blogs/addblog/', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data', // Set the content type to multipart/form-data\n            Authorization: `Token ${token}`,\n          },\n        })\n        .then(response => {\n          this.blog.title = '';\n          this.blog.content = '';\n          this.blog.slug = '';\n          this.blog.short_description = '';\n          this.blog.image = null; // Reset the image field\n          alert('Blog was added');\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    },\n\n    handleImageUpload(event) {\n      const file = event.target.files[0];\n      this.blog.image = file;\n    },\n  },\n}\n</script>"],"mappings":"AAkBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE,EAAE;QACXC,IAAI,EAAE,EAAE;QACRC,iBAAiB,EAAE,EAAE;QACrBC,KAAK,EAAE,IAAI,CAAE;MACf;IACF;EACF,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,MAAMC,KAAI,GAAIC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,QAAO,GAAI,IAAIC,QAAQ,CAAC,CAAC,EAAE;;MAEjC;MACAD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACb,IAAI,CAACC,KAAK,CAAC;MACzCU,QAAQ,CAACE,MAAM,CAAC,SAAS,EAAE,IAAI,CAACb,IAAI,CAACE,OAAO,CAAC;MAC7CS,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE,IAAI,CAACb,IAAI,CAACG,IAAI,CAAC;MACvCQ,QAAQ,CAACE,MAAM,CAAC,mBAAmB,EAAE,IAAI,CAACb,IAAI,CAACI,iBAAiB,CAAC;MACjEO,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACb,IAAI,CAACK,KAAK,CAAC;MAEzC,MAAMP,KAAI,CACPgB,IAAI,CAAC,gBAAgB,EAAEH,QAAQ,EAAE;QAChCI,OAAO,EAAE;UACP,cAAc,EAAE,qBAAqB;UAAE;UACvCC,aAAa,EAAG,SAAQR,KAAM;QAChC;MACF,CAAC,EACAS,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAAClB,IAAI,CAACC,KAAI,GAAI,EAAE;QACpB,IAAI,CAACD,IAAI,CAACE,OAAM,GAAI,EAAE;QACtB,IAAI,CAACF,IAAI,CAACG,IAAG,GAAI,EAAE;QACnB,IAAI,CAACH,IAAI,CAACI,iBAAgB,GAAI,EAAE;QAChC,IAAI,CAACJ,IAAI,CAACK,KAAI,GAAI,IAAI,EAAE;QACxBc,KAAK,CAAC,gBAAgB,CAAC;MACzB,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;IACN,CAAC;IAEDG,iBAAiBA,CAACC,KAAK,EAAE;MACvB,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAClC,IAAI,CAAC5B,IAAI,CAACK,KAAI,GAAIqB,IAAI;IACxB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}